{"ast":null,"code":"import _defineProperty from \"/Users/colin/Desktop/next/fitness-kaki-front-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/colin/Desktop/next/fitness-kaki-front-end/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/colin/Desktop/next/fitness-kaki-front-end/src/User/Registration.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport \"./Registration.css\";\nimport axios from 'axios';\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nconst passwordRegex = RegExp(/(?=.*[0-9])/);\n\nconst formValid = (_ref) => {\n  let formErrors = _ref.formErrors,\n      rest = _objectWithoutProperties(_ref, [\"formErrors\"]);\n\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const RegistrationApp = {\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n        firstname: this.state.firstname,\n        lastname: this.state.lastname\n      };\n      this.props.LiftMeUp(RegistrationApp);\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n\n      let formErrors = _objectSpread({}, this.state.formErrors);\n\n      switch (name) {\n        case \"firstname\":\n        case \"lastname\":\n        case \"username\":\n          formErrors.username = value.length < 8 ? \"please use unique username\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"password\":\n          formErrors.password = passwordRegex.test(value) ? \"\" : \"Should contain 8 character long, at least 1 number, 1 big letter, and 1 small letter\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      firstname: null,\n      lastname: null,\n      username: null,\n      email: null,\n      password: null,\n      formErrors: {\n        firstname: \"\",\n        lastname: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        loginSuccess: false\n      }\n    };\n  }\n\n  render() {\n    const formErrors = this.state.formErrors;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Create Account\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"firstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"firstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"input\", {\n      className: formErrors.firstname.length > 0 ? \"error\" : null,\n      placeholder: \"First Name\",\n      type: \"text\",\n      name: \"firstname\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), formErrors.firstname.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, formErrors.firstname)), React.createElement(\"div\", {\n      className: \"lastname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"input\", {\n      className: formErrors.lastname.length > 0 ? \"error\" : null,\n      placeholder: \"Last Name\",\n      type: \"text\",\n      name: \"lastname\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), formErrors.lastname.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, formErrors.lastname)), React.createElement(\"div\", {\n      className: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      className: formErrors.username.length > 0 ? \"error\" : null,\n      placeholder: \"username\",\n      type: \"text\",\n      name: \"username\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), formErrors.username.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, formErrors.username)), React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, formErrors.email)), React.createElement(\"div\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      className: formErrors.password.length > 0 ? \"error\" : null,\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, formErrors.password)), React.createElement(\"div\", {\n      className: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      href: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"a\", {\n      href: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"a\", {\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Already Have an Account?\")))));\n  }\n\n}\n\nexport default Registration;","map":{"version":3,"sources":["/Users/colin/Desktop/next/fitness-kaki-front-end/src/User/Registration.js"],"names":["React","Component","axios","emailRegex","RegExp","passwordRegex","formValid","formErrors","rest","valid","Object","values","forEach","val","length","Registration","constructor","props","handleSubmit","e","preventDefault","RegistrationApp","username","state","email","password","firstname","lastname","LiftMeUp","handleChange","target","name","value","test","setState","console","log","loginSuccess","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Registration.css\";\nimport axios from 'axios';\n\n\nconst emailRegex = RegExp(\n    /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst passwordRegex = RegExp(\n    /(?=.*[0-9])/\n);\n\nconst formValid = ({ formErrors, ...rest }) => {\n    let valid = true;\n\n    // validate form errors being empty\n    Object.values(formErrors).forEach(val => {\n        val.length > 0 && (valid = false);\n    });\n\n    // validate the form was filled out\n    Object.values(rest).forEach(val => {\n        val === null && (valid = false);\n    });\n\n    return valid;\n};\n\nclass Registration extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstname: null,\n            lastname: null,\n            username: null,\n            email: null,\n            password: null,\n            formErrors: {\n                firstname: \"\",\n                lastname: \"\",\n                username: \"\",\n                email: \"\",\n                password: \"\",\n                loginSuccess: false,\n            }\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const RegistrationApp = {\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            firstname: this.state.firstname,\n            lastname: this.state.lastname\n        }\n\n\n        this.props.LiftMeUp(RegistrationApp);\n    };\n\n\n\n\n\n    handleChange = e => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        let formErrors = { ...this.state.formErrors };\n\n        switch (name) {\n            case \"firstname\":\n            case \"lastname\":\n            case \"username\":\n                formErrors.username =\n                    value.length < 8 ? \"please use unique username\" : \"\";\n                break;\n            case \"email\":\n                formErrors.email = emailRegex.test(value)\n                    ? \"\"\n                    : \"invalid email address\";\n                break;\n            case \"password\":\n                formErrors.password = passwordRegex.test(value)\n                    ? \"\"\n                    : \"Should contain 8 character long, at least 1 number, 1 big letter, and 1 small letter\";\n                break;\n            default:\n                break;\n        }\n\n        this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n    };\n\n    render() {\n        const { formErrors } = this.state;\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"form-wrapper\">\n                    <h1>Create Account</h1>\n                    <form onSubmit={this.handleSubmit} noValidate>\n                        <div className=\"firstname\">\n                            <label htmlFor=\"firstname\">First Name</label>\n                            <input\n                                className={formErrors.firstname.length > 0 ? \"error\" : null}\n                                placeholder=\"First Name\"\n                                type=\"text\"\n                                name=\"firstname\"\n                                noValidate\n                                onChange={this.handleChange}\n                            />\n                            {formErrors.firstname.length > 0 && (\n                                <span className=\"errorMessage\">{formErrors.firstname}</span>\n                            )}\n                        </div>\n                        <div className=\"lastname\">\n                            <label htmlFor=\"lastname\">Last Name</label>\n                            <input\n                                className={formErrors.lastname.length > 0 ? \"error\" : null}\n                                placeholder=\"Last Name\"\n                                type=\"text\"\n                                name=\"lastname\"\n                                noValidate\n                                onChange={this.handleChange}\n                            />\n                            {formErrors.lastname.length > 0 && (\n                                <span className=\"errorMessage\">{formErrors.lastname}</span>\n                            )}\n                        </div>\n                        <div className=\"username\">\n                            <label htmlFor=\"username\">Username</label>\n                            <input\n                                className={formErrors.username.length > 0 ? \"error\" : null}\n                                placeholder=\"username\"\n                                type=\"text\"\n                                name=\"username\"\n                                noValidate\n                                onChange={this.handleChange}\n                            />\n                            {formErrors.username.length > 0 && (\n                                <span className=\"errorMessage\">{formErrors.username}</span>\n                            )}\n                        </div>\n                        <div className=\"email\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input\n                                className={formErrors.email.length > 0 ? \"error\" : null}\n                                placeholder=\"Email\"\n                                type=\"email\"\n                                name=\"email\"\n                                noValidate\n                                onChange={this.handleChange}\n                            />\n                            {formErrors.email.length > 0 && (\n                                <span className=\"errorMessage\">{formErrors.email}</span>\n                            )}\n                        </div>\n                        <div className=\"password\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input\n                                className={formErrors.password.length > 0 ? \"error\" : null}\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                name=\"password\"\n                                noValidate\n                                onChange={this.handleChange}\n                            />\n                            {formErrors.password.length > 0 && (\n                                <span className=\"errorMessage\">{formErrors.password}</span>\n                            )}\n                        </div>\n                        <div className=\"createAccount\">\n                            <button type=\"submit\" href=\"/profile\">Register</button>\n                            <a href=\"/profile\">Register</a>\n                            <a href=\"/login\">Already Have an Account?</a>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Registration;"]},"metadata":{},"sourceType":"module"}