{"ast":null,"code":"var _jsxFileName = \"/Users/colin/Desktop/next/fitness-kaki-front-end/src/components/PlacesWithStandaloneSearchBox.js\";\nimport React from \"react\";\nimport { compose, withProps, lifecycle } from \"recompose\";\nimport { withScriptjs } from \"react-google-maps\";\nimport { Input } from \"reactstrap\";\n\nconst _require = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\"),\n      StandaloneSearchBox = _require.StandaloneSearchBox;\n\nconst PlacesWithStandaloneSearchBox = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=&v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: \"400px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })\n}), lifecycle({\n  componentWillMount() {\n    const refs = {};\n    this.setState({\n      places: [],\n      onSearchBoxMounted: ref => {\n        refs.searchBox = ref;\n      },\n      onPlacesChanged: () => {\n        const places = refs.searchBox.getPlaces();\n        this.setState({\n          places\n        });\n      }\n    });\n  }\n\n}), withScriptjs)(props => React.createElement(\"div\", {\n  \"data-standalone-searchbox\": \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(StandaloneSearchBox, {\n  ref: props.onSearchBoxMounted,\n  bounds: props.bounds,\n  onPlacesChanged: props.onPlacesChanged,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(Input, {\n  className: \"form-control\",\n  type: \"text\",\n  placeholder: \"Enter a location here\",\n  style: {\n    textOverflow: \"ellipses\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n})), props.places.map(({\n  place_id,\n  name,\n  formatted_address\n}) => React.createElement(Input, {\n  key: place_id,\n  type: \"hidden\",\n  id: \"location\",\n  value: \"\".concat(name, \", \").concat(formatted_address),\n  onChange: props.liftMyLocationUp(\"\".concat(name, \", \").concat(formatted_address)),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}))));\nexport default PlacesWithStandaloneSearchBox;","map":{"version":3,"sources":["/Users/colin/Desktop/next/fitness-kaki-front-end/src/components/PlacesWithStandaloneSearchBox.js"],"names":["React","compose","withProps","lifecycle","withScriptjs","Input","require","StandaloneSearchBox","PlacesWithStandaloneSearchBox","googleMapURL","loadingElement","height","containerElement","componentWillMount","refs","setState","places","onSearchBoxMounted","ref","searchBox","onPlacesChanged","getPlaces","props","bounds","textOverflow","map","place_id","name","formatted_address","liftMyLocationUp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,SAA7B,QAA8C,WAA9C;AACA,SACEC,YADF,QAEO,mBAFP;AAGA,SAAQC,KAAR,QAAoB,YAApB;;iBAEgCC,OAAO,CAAC,6DAAD,C;MAA/BC,mB,YAAAA,mB;;AAER,MAAMC,6BAA6B,GAAGP,OAAO,CAC3CC,SAAS,CAAC;AACRO,EAAAA,YAAY,EAAE,wFADN;AAERC,EAAAA,cAAc,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR;AAGRC,EAAAA,gBAAgB,EAAE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHV,CAAD,CADkC,EAM3CR,SAAS,CAAC;AACRU,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,IAAI,GAAG,EAAb;AAEA,SAAKC,QAAL,CAAc;AACZC,MAAAA,MAAM,EAAE,EADI;AAEZC,MAAAA,kBAAkB,EAAEC,GAAG,IAAI;AACzBJ,QAAAA,IAAI,CAACK,SAAL,GAAiBD,GAAjB;AACD,OAJW;AAKZE,MAAAA,eAAe,EAAE,MAAM;AACrB,cAAMJ,MAAM,GAAGF,IAAI,CAACK,SAAL,CAAeE,SAAf,EAAf;AAEA,aAAKN,QAAL,CAAc;AACZC,UAAAA;AADY,SAAd;AAGD;AAXW,KAAd;AAaD;;AAjBO,CAAD,CANkC,EAyB3CZ,YAzB2C,CAAP,CA0BpCkB,KAAK,IACL;AAAK,+BAA0B,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,mBAAD;AACE,EAAA,GAAG,EAAEA,KAAK,CAACL,kBADb;AAEE,EAAA,MAAM,EAAEK,KAAK,CAACC,MAFhB;AAGE,EAAA,eAAe,EAAED,KAAK,CAACF,eAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKE,oBAAC,KAAD;AACE,EAAA,SAAS,EAAC,cADZ;AAEE,EAAA,IAAI,EAAC,MAFP;AAGE,EAAA,WAAW,EAAC,uBAHd;AAIE,EAAA,KAAK,EAAE;AACLI,IAAAA,YAAY;AADP,GAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,CADF,EAeKF,KAAK,CAACN,MAAN,CAAaS,GAAb,CACC,CACA;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CADA,KAGA,oBAAC,KAAD;AAAO,EAAA,GAAG,EAAEF,QAAZ;AAAsB,EAAA,IAAI,EAAC,QAA3B;AAAoC,EAAA,EAAE,EAAC,UAAvC;AAAkD,EAAA,KAAK,YAAKC,IAAL,eAAcC,iBAAd,CAAvD;AAA0F,EAAA,QAAQ,EAAEN,KAAK,CAACO,gBAAN,WAA0BF,IAA1B,eAAmCC,iBAAnC,EAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJD,CAfL,CA3BoC,CAAtC;AAkDA,eAAepB,6BAAf","sourcesContent":["import React from \"react\";\nimport { compose, withProps, lifecycle } from \"recompose\";\nimport {\n  withScriptjs\n} from \"react-google-maps\";\nimport {Input} from \"reactstrap\";\n\nconst { StandaloneSearchBox } = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\");\n\nconst PlacesWithStandaloneSearchBox = compose(\n  withProps({\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {}\n\n      this.setState({\n        places: [],\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n        },\n        onPlacesChanged: () => {\n          const places = refs.searchBox.getPlaces();\n\n          this.setState({\n            places,\n          });\n        },\n      })\n    },\n  }),\n  withScriptjs  \n)(props =>\n  <div data-standalone-searchbox=\"\">\n    <StandaloneSearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      onPlacesChanged={props.onPlacesChanged}\n    >\n      <Input\n        className=\"form-control\"\n        type=\"text\"\n        placeholder=\"Enter a location here\"\n        style={{\n          textOverflow: `ellipses`,\n        }}\n      />\n    </StandaloneSearchBox>\n      {props.places.map(\n        (\n        { place_id, name, formatted_address}\n        ) =>\n        <Input key={place_id} type=\"hidden\" id=\"location\" value={`${name}, ${formatted_address}`} onChange={props.liftMyLocationUp(`${name}, ${formatted_address}`)}/>)}\n    </div>\n);\n\nexport default PlacesWithStandaloneSearchBox;"]},"metadata":{},"sourceType":"module"}